<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">

    <resultMap id="BaseResultMap" type="com.atguigu.gmall.model.product.BaseAttrInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="attrName" column="attr_name" jdbcType="VARCHAR"/>
            <result property="categoryId" column="category_id" jdbcType="BIGINT"/>
            <result property="categoryLevel" column="category_level" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,attr_name,category_id,
        category_level
    </sql>
<!--  resultType 数据库查询的每一条记录,new baseAttrInfo() 然后把对象放到这个对象中,把这个集合返回? -->

    <resultMap id="attrInfoAndValue"
               type="com.atguigu.gmall.model.product.BaseAttrInfo"
                autoMapping="true">
        <!--用id标签区分出唯一id-->
        <id column="id" property="id"></id>
        <!--<result column="attr_name" property="attrName"></result>
        <result column="category_id" property="categoryId"></result>
        <result column="category_level" property="categoryLevel"></result>-->
        <collection property="attrValueList"
                    ofType="com.atguigu.gmall.model.product.BaseAttrValue"
                    autoMapping="true">
            <!--autoMapping:数据库的列和javaBean属性一一对应符合驼峰命名才可用-->
            <id column="vid" property="id"></id>
            <!--<result column="value_name" property="valueName"></result>
            <result column="attr_id" property="attrId"></result>-->
        </collection>
    </resultMap>
    <select id="getAttrAndInfoByCategoryId"
            resultMap="attrInfoAndValue">
        SELECT bai.*,bav.id vid ,bav.value_name,bav.attr_id
        FROM base_attr_info bai
        LEFT JOIN base_attr_value bav ON bai.id = bav.attr_id
        WHERE (bai.category_id=#{c1id} AND bai.category_level=1)
        OR (bai.category_id=#{c2id} AND bai.category_level=2)
        OR(bai.category_id=#{c3id} AND bai.category_level=3)
        <!--<where>
            <if test="c1Id != o">
                (bai.category_id=#{c1id} AND bai.category_level=1)
            </if>
            <if test="c2Id != o">
                OR (bai.category_id=#{c2id} AND bai.category_level=2)
            </if>
            <if test="c3Id != o">
                OR(bai.category_id=#{c3id} AND bai.category_level=3)
            </if>
        </where>-->
    </select>
</mapper>
